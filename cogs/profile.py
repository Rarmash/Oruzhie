import discord
from discord.ext import commands
import time
import datetime
from math import ceil
import sys
import platform
from options import insider_id, admin_id, accent_color, Collection, version

class Profile(commands.Cog):
    def __init__(self, bot):
        self.Bot = bot

    @commands.slash_command(description='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –ø—Ä–æ—Ñ–∏–ª—è')
    async def profile(self, ctx: discord.ApplicationContext, user: discord.Member = None):
        date_format = "%#d.%#m.%Y –≤ %H:%M:%S"
        if user is None:
            user = ctx.author
        if user.status == discord.Status.online:
            status = "üü¢ –≤ —Å–µ—Ç–∏"
        if user.status == discord.Status.offline:
            status = "‚ö™ –Ω–µ –≤ —Å–µ—Ç–∏"
        if user.status == discord.Status.idle:
            status = "üåô –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
        if user.status == discord.Status.dnd:
            status = "‚õî –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å"
        user_data = Collection.find_one({"_id": str(user.id)})
        if user.id != self.Bot.user.id:
            time_out = '(–≤ —Ç–∞–π–º-–∞—É—Ç–µ)' if user.timed_out else ''
            embed = discord.Embed(title = f'–ü—Ä–∏–≤–µ—Ç, —è {user.name}', description=f"<@{user.id}> ‚Äî {status} {time_out}", color = accent_color)
            embed.add_field(name = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", value = f"<t:{ceil(time.mktime((datetime.datetime.strptime(str(user.created_at.strftime(date_format)), '%d.%m.%Y –≤ %H:%M:%S')+datetime.timedelta(hours=3)).timetuple()))}:f>")
            embed.add_field(name = "–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å", value = f"<t:{ceil(time.mktime((datetime.datetime.strptime(str(user.joined_at.strftime(date_format)), '%d.%m.%Y –≤ %H:%M:%S')+datetime.timedelta(hours=3)).timetuple()))}:f>")
            if not user.bot:
                embed.add_field(name = "–°–æ–æ–±—â–µ–Ω–∏–π", value = user_data['messages'])
                embed.add_field(name = "–í—Å–µ–≥–æ —Ç–∞–π–º-–∞—É—Ç–æ–≤", value = user_data['timeouts'])
                try:
                    embed.add_field(name = "–ü—Ä–æ—Ñ–∏–ª—å Xbox", value = f"[{user_data['xbox']}](https://account.xbox.com/ru-ru/Profile?Gamertag={str(user_data['xbox']).replace(' ', '%20')})")
                except KeyError:
                    pass
                try:
                    embed.add_field(name = "–ü—Ä–æ—Ñ–∏–ª—å Fortnite", value = user_data['fortnite'])
                except KeyError:
                    pass
            if discord.utils.get(ctx.guild.roles, id=insider_id) in user.roles:
                embed.set_footer(text="–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —É—á–∞—Å—Ç–∏–µ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä—É —Å—Ç–∞—Ç—å –ª—É—á—à–µ")
            embed.set_thumbnail(url=user.avatar)
        if user.id == self.Bot.user.id:
            embed = discord.Embed(title = f'–ü—Ä–∏–≤–µ—Ç, —è {user.name}', description=f"–¢–µ–≥: <@{user.id}>", color = accent_color)
            embed.add_field(name = "–í–ª–∞–¥–µ–ª–µ—Ü", value=f"<@{admin_id}>")
            embed.add_field(name = "–°–µ—Ä–≤–µ—Ä –±–æ—Ç–∞", value = "Rebox Shit Force")
            embed.add_field(name = "–°–æ–∑–¥–∞–Ω", value = f"<t:{ceil(time.mktime((datetime.datetime.strptime(str(user.created_at.strftime(date_format)), '%d.%m.%Y –≤ %H:%M:%S')+datetime.timedelta(hours=3)).timetuple()))}:f>")
            embed.add_field(name = "–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å", value = f"<t:{ceil(time.mktime((datetime.datetime.strptime(str(user.joined_at.strftime(date_format)), '%d.%m.%Y –≤ %H:%M:%S')+datetime.timedelta(hours=3)).timetuple()))}:f>")
            embed.add_field(name = "–°—Ç–∞—Ç—É—Å", value = status)
            embed.add_field(name = "–û–°", value = sys.platform)
            embed.add_field(name = "–í–µ—Ä—Å–∏—è –±–æ—Ç–∞", value = version)
            embed.add_field(name = "–í–µ—Ä—Å–∏—è Python", value = platform.python_version())
            embed.add_field(name = "–í–µ—Ä—Å–∏—è Pycord", value = discord.__version__)
            embed.add_field(name = "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ", value = "[–¢—ã–∫](https://discord.com/oauth2/authorize?client_id=935560968778448947&scope=bot&permissions=8)")
            embed.set_thumbnail(url=user.avatar)
        await ctx.respond(embed = embed)

def setup(bot):
    bot.add_cog(Profile(bot))